This repo is the source code for a fantasy AI bot I'm developing.

The plan is :
1.  Automate stat and availability report collection and feature calculation with python and selenium webdriver
2.  To have a linear regression model be able to forecast an individual player's stat
line through calculating features derived from various statistical metrics from  
all NBA boxscore data in the 3-point era (1980 season and beyond).  
3.  Then add an algorithm capable of classifying written text for a given player's availability 
on a given night (SVM, sentiment analysis?)
4.  Then add a reinforcement learning algorithm to handle the day-to-day adds drops, and trades
to maximize results in regular season and playoff formats
5.  Plug the reinforcement learning algorithm into Yahoo fantasy sports API to control a live version
6.  PROFIT!

The 'scratch' folder contains a lot of the one-off sql queries used to set up my tables, or smaller 
functions I can use when testing the addition of new functionality
--------
Currently working on : 
dockerizing the workflow for precalculated features.  Basically a data pipeline that utilizes my database,
subdivides the job, and processes the feature with parallelization

Sentiment analysis for predicting player availability.  Currently walking myself through the datasets,
looking at edge cases and other pain points when compiling a dataset that predicts if a player plays
in a particular game or not.

My boxscore data only contains players who appeared in a game, not DNPs.  So, in order to get any 
played = False results in my sentiment analysis dataset, I'm gonna have to create rosters for each 
team and update them over the course of the season and fill them into my training/testing data.

And right now, I need a strategy for doing this....
--------
Next Up : 
- create a generalized function to append new boxscores to my table of calculated features
- figure out data visualization in python and tinker with the linear regression model to 
get increasingly better results
Ongoing : 
- Add a few more precalculated features
--------
Technology used :
python3.8 as the base-language
mysql as the database
tensorflow for the machine learning components
pandas for the input vector data to tensorflow
selenium for web scraping
git for sharing to anyone interested as well as versioning control
yahoo fantasy sports api* 
docker

* to be added soon