This repo is the source code for a fantasy AI bot I'm developing.

The plan is :
1.  Automate stat and availability report collection and feature calculation with python and selenium webdriver
2.  To have a linear regression model be able to forecast an individual player's stat
line through calculating features derived from various statistical metrics from  
all NBA boxscore data in the 3-point era (1980 season and beyond).  
3.  Then add an algorithm capable of classifying written text for a given player's availability 
on a given night (SVM, sentiment analysis?)
4.  Then add a reinforcement learning algorithm to handle the day-to-day adds drops, and trades
to maximize results in regular season and playoff formats
5.  Plug the reinforcement learning algorithm into Yahoo fantasy sports API to control a live version
6.  PROFIT!

As a bonus, I'm considering setting up my own kubernetes cluster to aid in some of the larger
data crunching operations this will have to do. Utilizing an old PS3 I'll convert into a linux 
box.  (EDIT : evidently, Sony took away this feature of the ps3 in 2010.  It's still possible
but much more difficult to do now)

The 'scratch' folder contains a lot of the one-off sql queries used to set up my tables, or smaller 
functions I can use when testing the addition of new functionality
--------
Current state : 
-I've set up and tested the 'league' functionality. A collection of team objects, matchups, schedule,
as well as the rules for determining the winners of the weekly matchups and the league overall.  
This will be used as the framework for the reinforcement learning algorithm training with historical data
-I've scraped the data required and set up the database, as well as indexed the data so it can be used
programmatically.  Also created a pair of web scrapers that should continue to update the databases with
new data as it's generated hands free (or as long as my upstream data creators don't change their websites)
-I've added a generalized function to add any new features I come up with to a features table in the back end 
-I've gotten a first successful run with a linear regression algorithm to predict player points from a 
few basic features.  
--------
Next Up : 
- create a generalized function to append new boxscores to my table of calculated features
- figure out data visualization in python and tinker with the linear regression model to 
get increasingly better results
Ongoing : 
- Add a few more precalculated features
--------
Technology used :
python3.7 as the base-language
mysql as the database
tensorflow for the machine learning components
pandas for the input vector data to tensorflow
selenium for web scraping
git for sharing to anyone interested as well as versioning control
yahoo fantasy sports api* 
kubernetes*

* to be added soon